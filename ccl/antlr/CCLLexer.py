# Generated from /home/krab1k/Research/CCL/CCL.g4 by ANTLR 4.7
from antlr4 import *
from io import StringIO
from typing.io import TextIO
import sys


def serializedATN():
    with StringIO() as buf:
        buf.write("\3\u608b\ua72a\u8133\ub9ed\u417c\u3be7\u7786\u5964\2*")
        buf.write("\u0116\b\1\4\2\t\2\4\3\t\3\4\4\t\4\4\5\t\5\4\6\t\6\4\7")
        buf.write("\t\7\4\b\t\b\4\t\t\t\4\n\t\n\4\13\t\13\4\f\t\f\4\r\t\r")
        buf.write("\4\16\t\16\4\17\t\17\4\20\t\20\4\21\t\21\4\22\t\22\4\23")
        buf.write("\t\23\4\24\t\24\4\25\t\25\4\26\t\26\4\27\t\27\4\30\t\30")
        buf.write("\4\31\t\31\4\32\t\32\4\33\t\33\4\34\t\34\4\35\t\35\4\36")
        buf.write("\t\36\4\37\t\37\4 \t \4!\t!\4\"\t\"\4#\t#\4$\t$\4%\t%")
        buf.write("\4&\t&\4\'\t\'\4(\t(\4)\t)\4*\t*\4+\t+\4,\t,\4-\t-\3\2")
        buf.write("\3\2\3\2\3\2\3\2\3\2\3\3\3\3\3\4\3\4\3\4\3\4\3\5\3\5\3")
        buf.write("\5\3\6\3\6\3\7\3\7\3\7\3\7\3\7\3\b\3\b\3\b\3\b\3\b\3\b")
        buf.write("\3\b\3\b\3\b\3\t\3\t\3\t\3\t\3\t\3\n\3\n\3\n\3\n\3\n\3")
        buf.write("\13\3\13\3\13\3\13\3\13\3\13\3\13\3\13\3\13\3\13\3\f\3")
        buf.write("\f\3\r\3\r\3\16\3\16\3\17\3\17\3\20\3\20\3\21\3\21\3\22")
        buf.write("\3\22\3\23\3\23\3\23\3\23\3\24\3\24\3\25\3\25\3\26\3\26")
        buf.write("\3\27\3\27\3\27\3\30\3\30\3\30\3\31\3\31\3\31\3\31\3\31")
        buf.write("\3\31\3\31\3\32\3\32\3\32\3\32\3\32\3\32\3\32\3\32\3\32")
        buf.write("\3\32\3\33\3\33\3\33\3\33\3\34\3\34\3\34\3\35\3\35\3\35")
        buf.write("\3\35\3\36\3\36\3\37\3\37\3 \3 \3 \3!\3!\3!\3\"\3\"\3")
        buf.write("\"\3#\3#\3#\3$\5$\u00da\n$\3$\3$\3%\3%\3&\3&\3\'\3\'\5")
        buf.write("\'\u00e4\n\'\3(\3(\6(\u00e8\n(\r(\16(\u00e9\3(\3(\3)\3")
        buf.write(")\7)\u00f0\n)\f)\16)\u00f3\13)\3)\3)\3)\3)\3*\3*\3*\3")
        buf.write("*\3+\5+\u00fe\n+\3+\6+\u0101\n+\r+\16+\u0102\3+\3+\7+")
        buf.write("\u0107\n+\f+\16+\u010a\13+\5+\u010c\n+\3,\3,\7,\u0110")
        buf.write("\n,\f,\16,\u0113\13,\3-\3-\3\u00f1\2.\3\3\5\4\7\5\t\6")
        buf.write("\13\7\r\b\17\t\21\n\23\13\25\f\27\r\31\16\33\17\35\20")
        buf.write("\37\21!\22#\23%\24\'\25)\26+\27-\30/\31\61\32\63\33\65")
        buf.write("\34\67\359\36;\37= ?!A\"C#E$G\2I\2K\2M\2O%Q&S\'U(W)Y*")
        buf.write("\3\2\5\3\2\62;\4\2C\\c|\4\2\13\f\"\"\2\u011a\2\3\3\2\2")
        buf.write("\2\2\5\3\2\2\2\2\7\3\2\2\2\2\t\3\2\2\2\2\13\3\2\2\2\2")
        buf.write("\r\3\2\2\2\2\17\3\2\2\2\2\21\3\2\2\2\2\23\3\2\2\2\2\25")
        buf.write("\3\2\2\2\2\27\3\2\2\2\2\31\3\2\2\2\2\33\3\2\2\2\2\35\3")
        buf.write("\2\2\2\2\37\3\2\2\2\2!\3\2\2\2\2#\3\2\2\2\2%\3\2\2\2\2")
        buf.write("\'\3\2\2\2\2)\3\2\2\2\2+\3\2\2\2\2-\3\2\2\2\2/\3\2\2\2")
        buf.write("\2\61\3\2\2\2\2\63\3\2\2\2\2\65\3\2\2\2\2\67\3\2\2\2\2")
        buf.write("9\3\2\2\2\2;\3\2\2\2\2=\3\2\2\2\2?\3\2\2\2\2A\3\2\2\2")
        buf.write("\2C\3\2\2\2\2E\3\2\2\2\2O\3\2\2\2\2Q\3\2\2\2\2S\3\2\2")
        buf.write("\2\2U\3\2\2\2\2W\3\2\2\2\2Y\3\2\2\2\3[\3\2\2\2\5a\3\2")
        buf.write("\2\2\7c\3\2\2\2\tg\3\2\2\2\13j\3\2\2\2\rl\3\2\2\2\17q")
        buf.write("\3\2\2\2\21z\3\2\2\2\23\177\3\2\2\2\25\u0084\3\2\2\2\27")
        buf.write("\u008e\3\2\2\2\31\u0090\3\2\2\2\33\u0092\3\2\2\2\35\u0094")
        buf.write("\3\2\2\2\37\u0096\3\2\2\2!\u0098\3\2\2\2#\u009a\3\2\2")
        buf.write("\2%\u009c\3\2\2\2\'\u00a0\3\2\2\2)\u00a2\3\2\2\2+\u00a4")
        buf.write("\3\2\2\2-\u00a6\3\2\2\2/\u00a9\3\2\2\2\61\u00ac\3\2\2")
        buf.write("\2\63\u00b3\3\2\2\2\65\u00bd\3\2\2\2\67\u00c1\3\2\2\2")
        buf.write("9\u00c4\3\2\2\2;\u00c8\3\2\2\2=\u00ca\3\2\2\2?\u00cc\3")
        buf.write("\2\2\2A\u00cf\3\2\2\2C\u00d2\3\2\2\2E\u00d5\3\2\2\2G\u00d9")
        buf.write("\3\2\2\2I\u00dd\3\2\2\2K\u00df\3\2\2\2M\u00e3\3\2\2\2")
        buf.write("O\u00e5\3\2\2\2Q\u00ed\3\2\2\2S\u00f8\3\2\2\2U\u00fd\3")
        buf.write("\2\2\2W\u010d\3\2\2\2Y\u0114\3\2\2\2[\\\7y\2\2\\]\7j\2")
        buf.write("\2]^\7g\2\2^_\7t\2\2_`\7g\2\2`\4\3\2\2\2ab\7?\2\2b\6\3")
        buf.write("\2\2\2cd\7h\2\2de\7q\2\2ef\7t\2\2f\b\3\2\2\2gh\7v\2\2")
        buf.write("hi\7q\2\2i\n\3\2\2\2jk\7<\2\2k\f\3\2\2\2lm\7f\2\2mn\7")
        buf.write("q\2\2no\7p\2\2op\7g\2\2p\16\3\2\2\2qr\7h\2\2rs\7q\2\2")
        buf.write("st\7t\2\2tu\7\"\2\2uv\7g\2\2vw\7c\2\2wx\7e\2\2xy\7j\2")
        buf.write("\2y\20\3\2\2\2z{\7c\2\2{|\7v\2\2|}\7q\2\2}~\7o\2\2~\22")
        buf.write("\3\2\2\2\177\u0080\7d\2\2\u0080\u0081\7q\2\2\u0081\u0082")
        buf.write("\7p\2\2\u0082\u0083\7f\2\2\u0083\24\3\2\2\2\u0084\u0085")
        buf.write("\7u\2\2\u0085\u0086\7w\2\2\u0086\u0087\7e\2\2\u0087\u0088")
        buf.write("\7j\2\2\u0088\u0089\7\"\2\2\u0089\u008a\7v\2\2\u008a\u008b")
        buf.write("\7j\2\2\u008b\u008c\7c\2\2\u008c\u008d\7v\2\2\u008d\26")
        buf.write("\3\2\2\2\u008e\u008f\7`\2\2\u008f\30\3\2\2\2\u0090\u0091")
        buf.write("\7-\2\2\u0091\32\3\2\2\2\u0092\u0093\7/\2\2\u0093\34\3")
        buf.write("\2\2\2\u0094\u0095\7,\2\2\u0095\36\3\2\2\2\u0096\u0097")
        buf.write("\7\61\2\2\u0097 \3\2\2\2\u0098\u0099\7*\2\2\u0099\"\3")
        buf.write("\2\2\2\u009a\u009b\7+\2\2\u009b$\3\2\2\2\u009c\u009d\7")
        buf.write("u\2\2\u009d\u009e\7w\2\2\u009e\u009f\7o\2\2\u009f&\3\2")
        buf.write("\2\2\u00a0\u00a1\7]\2\2\u00a1(\3\2\2\2\u00a2\u00a3\7_")
        buf.write("\2\2\u00a3*\3\2\2\2\u00a4\u00a5\7.\2\2\u00a5,\3\2\2\2")
        buf.write("\u00a6\u00a7\7k\2\2\u00a7\u00a8\7h\2\2\u00a8.\3\2\2\2")
        buf.write("\u00a9\u00aa\7k\2\2\u00aa\u00ab\7u\2\2\u00ab\60\3\2\2")
        buf.write("\2\u00ac\u00ad\7e\2\2\u00ad\u00ae\7q\2\2\u00ae\u00af\7")
        buf.write("o\2\2\u00af\u00b0\7o\2\2\u00b0\u00b1\7q\2\2\u00b1\u00b2")
        buf.write("\7p\2\2\u00b2\62\3\2\2\2\u00b3\u00b4\7r\2\2\u00b4\u00b5")
        buf.write("\7c\2\2\u00b5\u00b6\7t\2\2\u00b6\u00b7\7c\2\2\u00b7\u00b8")
        buf.write("\7o\2\2\u00b8\u00b9\7g\2\2\u00b9\u00ba\7v\2\2\u00ba\u00bb")
        buf.write("\7g\2\2\u00bb\u00bc\7t\2\2\u00bc\64\3\2\2\2\u00bd\u00be")
        buf.write("\7c\2\2\u00be\u00bf\7p\2\2\u00bf\u00c0\7f\2\2\u00c0\66")
        buf.write("\3\2\2\2\u00c1\u00c2\7q\2\2\u00c2\u00c3\7t\2\2\u00c38")
        buf.write("\3\2\2\2\u00c4\u00c5\7p\2\2\u00c5\u00c6\7q\2\2\u00c6\u00c7")
        buf.write("\7v\2\2\u00c7:\3\2\2\2\u00c8\u00c9\7>\2\2\u00c9<\3\2\2")
        buf.write("\2\u00ca\u00cb\7@\2\2\u00cb>\3\2\2\2\u00cc\u00cd\7#\2")
        buf.write("\2\u00cd\u00ce\7?\2\2\u00ce@\3\2\2\2\u00cf\u00d0\7?\2")
        buf.write("\2\u00d0\u00d1\7?\2\2\u00d1B\3\2\2\2\u00d2\u00d3\7>\2")
        buf.write("\2\u00d3\u00d4\7?\2\2\u00d4D\3\2\2\2\u00d5\u00d6\7@\2")
        buf.write("\2\u00d6\u00d7\7?\2\2\u00d7F\3\2\2\2\u00d8\u00da\7\17")
        buf.write("\2\2\u00d9\u00d8\3\2\2\2\u00d9\u00da\3\2\2\2\u00da\u00db")
        buf.write("\3\2\2\2\u00db\u00dc\7\f\2\2\u00dcH\3\2\2\2\u00dd\u00de")
        buf.write("\t\2\2\2\u00deJ\3\2\2\2\u00df\u00e0\t\3\2\2\u00e0L\3\2")
        buf.write("\2\2\u00e1\u00e4\5I%\2\u00e2\u00e4\5K&\2\u00e3\u00e1\3")
        buf.write("\2\2\2\u00e3\u00e2\3\2\2\2\u00e4N\3\2\2\2\u00e5\u00e7")
        buf.write("\7$\2\2\u00e6\u00e8\5M\'\2\u00e7\u00e6\3\2\2\2\u00e8\u00e9")
        buf.write("\3\2\2\2\u00e9\u00e7\3\2\2\2\u00e9\u00ea\3\2\2\2\u00ea")
        buf.write("\u00eb\3\2\2\2\u00eb\u00ec\7$\2\2\u00ecP\3\2\2\2\u00ed")
        buf.write("\u00f1\7%\2\2\u00ee\u00f0\13\2\2\2\u00ef\u00ee\3\2\2\2")
        buf.write("\u00f0\u00f3\3\2\2\2\u00f1\u00f2\3\2\2\2\u00f1\u00ef\3")
        buf.write("\2\2\2\u00f2\u00f4\3\2\2\2\u00f3\u00f1\3\2\2\2\u00f4\u00f5")
        buf.write("\5G$\2\u00f5\u00f6\3\2\2\2\u00f6\u00f7\b)\2\2\u00f7R\3")
        buf.write("\2\2\2\u00f8\u00f9\t\4\2\2\u00f9\u00fa\3\2\2\2\u00fa\u00fb")
        buf.write("\b*\3\2\u00fbT\3\2\2\2\u00fc\u00fe\7/\2\2\u00fd\u00fc")
        buf.write("\3\2\2\2\u00fd\u00fe\3\2\2\2\u00fe\u0100\3\2\2\2\u00ff")
        buf.write("\u0101\5I%\2\u0100\u00ff\3\2\2\2\u0101\u0102\3\2\2\2\u0102")
        buf.write("\u0100\3\2\2\2\u0102\u0103\3\2\2\2\u0103\u010b\3\2\2\2")
        buf.write("\u0104\u0108\7\60\2\2\u0105\u0107\5I%\2\u0106\u0105\3")
        buf.write("\2\2\2\u0107\u010a\3\2\2\2\u0108\u0106\3\2\2\2\u0108\u0109")
        buf.write("\3\2\2\2\u0109\u010c\3\2\2\2\u010a\u0108\3\2\2\2\u010b")
        buf.write("\u0104\3\2\2\2\u010b\u010c\3\2\2\2\u010cV\3\2\2\2\u010d")
        buf.write("\u0111\5K&\2\u010e\u0110\5M\'\2\u010f\u010e\3\2\2\2\u0110")
        buf.write("\u0113\3\2\2\2\u0111\u010f\3\2\2\2\u0111\u0112\3\2\2\2")
        buf.write("\u0112X\3\2\2\2\u0113\u0111\3\2\2\2\u0114\u0115\13\2\2")
        buf.write("\2\u0115Z\3\2\2\2\f\2\u00d9\u00e3\u00e9\u00f1\u00fd\u0102")
        buf.write("\u0108\u010b\u0111\4\b\2\2\2\3\2")
        return buf.getvalue()


class CCLLexer(Lexer):

    atn = ATNDeserializer().deserialize(serializedATN())

    decisionsToDFA = [ DFA(ds, i) for i, ds in enumerate(atn.decisionToState) ]

    T__0 = 1
    T__1 = 2
    T__2 = 3
    T__3 = 4
    T__4 = 5
    T__5 = 6
    T__6 = 7
    T__7 = 8
    T__8 = 9
    T__9 = 10
    T__10 = 11
    T__11 = 12
    T__12 = 13
    T__13 = 14
    T__14 = 15
    T__15 = 16
    T__16 = 17
    T__17 = 18
    T__18 = 19
    T__19 = 20
    T__20 = 21
    T__21 = 22
    T__22 = 23
    T__23 = 24
    T__24 = 25
    T__25 = 26
    T__26 = 27
    T__27 = 28
    T__28 = 29
    T__29 = 30
    T__30 = 31
    T__31 = 32
    T__32 = 33
    T__33 = 34
    STRING = 35
    COMMENT = 36
    WS = 37
    NUMBER = 38
    NAME = 39
    ERROR_CHAR = 40

    channelNames = [ u"DEFAULT_TOKEN_CHANNEL", u"HIDDEN" ]

    modeNames = [ "DEFAULT_MODE" ]

    literalNames = [ "<INVALID>",
            "'where'", "'='", "'for'", "'to'", "':'", "'done'", "'for each'", 
            "'atom'", "'bond'", "'such that'", "'^'", "'+'", "'-'", "'*'", 
            "'/'", "'('", "')'", "'sum'", "'['", "']'", "','", "'if'", "'is'", 
            "'common'", "'parameter'", "'and'", "'or'", "'not'", "'<'", 
            "'>'", "'!='", "'=='", "'<='", "'>='" ]

    symbolicNames = [ "<INVALID>",
            "STRING", "COMMENT", "WS", "NUMBER", "NAME", "ERROR_CHAR" ]

    ruleNames = [ "T__0", "T__1", "T__2", "T__3", "T__4", "T__5", "T__6", 
                  "T__7", "T__8", "T__9", "T__10", "T__11", "T__12", "T__13", 
                  "T__14", "T__15", "T__16", "T__17", "T__18", "T__19", 
                  "T__20", "T__21", "T__22", "T__23", "T__24", "T__25", 
                  "T__26", "T__27", "T__28", "T__29", "T__30", "T__31", 
                  "T__32", "T__33", "NL", "DIGIT", "LETTER", "ALPHA", "STRING", 
                  "COMMENT", "WS", "NUMBER", "NAME", "ERROR_CHAR" ]

    grammarFileName = "CCL.g4"

    def __init__(self, input=None, output:TextIO = sys.stdout):
        super().__init__(input, output)
        self.checkVersion("4.7")
        self._interp = LexerATNSimulator(self, self.atn, self.decisionsToDFA, PredictionContextCache())
        self._actions = None
        self._predicates = None


